version: "3"
services:
  mysqldb:
    image: mysql:8.0
    container_name: mysqldbcontainer
    command: --default-authentication-plugin=mysql_native_password
    restart: unless-stopped
    volumes:
      - ./back-end/dbinit/init.sql:/docker-entrypoint-initdb.d/0_init.sql
      # windows
      # - c:\data/apiTodo:/var/lib/mysql
    ports:
      - "4306:3306"
    expose:
      - "3306"
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      SERVICE_TAGS: ${SERVICE_TAGS}
      SERVICE_NAME: mysqldb
    networks:
      - app-network

  back-end:
  container_name: backendcontainer
  build: ./back-end
  image: nodeapp:v1
  volumes:
    - c:\data/nodeapp:/code
  ports:
    - "3000:3000"
  expose:
    - "3000"
  environment:
  DB_HOST: ${MYSQL_HOST}
  DB_PORT: ${MYSQL_PORT}
  DB_USER: ${MYSQL_USER}
  DB_PASSWORD: ${MYSQL_PASSWORD}
  DB_DATABASE: ${MYSQL_DATABASE}
  DB_CONNECTION_LIMIT: ${MYSQL_CONNECTION_LIMIT}
  SERVICE_TAGS: ${SERVICE_TAGS}
  SERVICE_NAME: nodeappservice
  PORT: ${APP_PORT}
  depends_on:
    - mysqldb
  networks:
    - app-network

  adminer:
    image: adminer
    container_name: adminercontainer
    restart: unless-stopped
    depends_on:
      - mysqldb
    ports:
      - "8085:8080"

  frontend:
    container_name: frontendcontainer
    build: ./front-end
    image: reactapp:v1
    volumes:
      - ./front-end:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - "5173:5173"
    expose:
      - "5173"
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
